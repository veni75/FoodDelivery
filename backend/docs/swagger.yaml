openapi: 3.0.0
info:
  version: 1.0.0
  title: Food Delivery Service API
  description: Food Delivery Service API
servers:
  - url: http://localhost:3000
paths:
  /bills:
    get:
      description: Returns a list of bill
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of bills returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bill'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new bill
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bill'
      responses:
        '201':
          description: Bill has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /bills/{bill_id}:
    get:
      description: Returns the bill with the given id
      security:
        - bearerAuth: []
      parameters:
        - name: bill_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A Bill data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
        '404':
          description: Bill with the give id was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Updates a bill
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bill'
      responses:
        '200':
          description: Bill has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Removes a bill
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Bill has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Bill based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /foods:
    get:
      description: Returns a list of foods      
      responses:
        '200':
          description: List of foods returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Food'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new food
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Food'
      responses:
        '201':
          description: Food has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Food'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /foods/{food_id}:
    get:
      description: Returns the food with the given id
      parameters:
        - name: food_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Food data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Food'
        '404':
          description: Food with the give id was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Updates a food
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Food'
      responses:
        '200':
          description: Food has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Food'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Removes a food
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Food has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Food based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /foods/diet/{food_category}:
    get:
      description: Returns the food with the given category
      parameters:
        - name: food_category
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Food data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Food'
        '404':
          description: Food with the give category was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /messages:
    get:
      description: Returns a list of message
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of message returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new message
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '201':
          description: Order has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders/{order_id}:
    get:
      description: Returns the message with the given id
      security:
        - bearerAuth: []
      parameters:
        - name: message_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Message data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '404':
          description: Message with the give id was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Updates a message
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '200':
          description: Message has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Removes a message
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Message has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Message based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /nutrients:
    get:
      description: Returns a list of nutrient      
      responses:
        '200':
          description: List of nutrient returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Nutrient'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new nutrient
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nutrient'
      responses:
        '201':
          description: Nutrient has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nutrient'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /nutrients/{nutrient_id}:
    get:
      description: Returns the nutrient with the given ID
      parameters:
        - name: nutrient_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Nutrient data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nutrient'
        '404':
          description: Nutrient with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Updates a nutrient
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nutrient'
      responses:
        '200':
          description: Nutrient has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nutrient'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Removes a nutrient
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Nutrient has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Nutrient based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders:
    get:
      description: Returns a list of order
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of order returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new order
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders/{order_id}:
    get:
      description: Returns the order with the given id
      security:
        - bearerAuth: []
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order with the give id was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Updates an order
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Order has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Removes an order
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Order has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Order based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users:
    get:
      description: Returns a list of user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of user returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{user_id}:
    get:
      description: Returns the user with the given id
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Updates a user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Removes a user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: User has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: User based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    bearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Bill:
      type: object
      required:
        - orderId
        - amount
        - status
      properties:
        orderId:
          type: number
        amount:
          type: number
        status:
          type: string
    Food:
      type: object
      required:
        - foodName
        - ingredients
        - category
        - price
        - image
        - active
        
      properties:
        foodName:
          type: string
        ingredients:
          type: Array
        category:
          type: string
        price:
          type: number
        image:
          type: string
        active:
          type: boolean
    Message:
      type: object
      required:
        - email
        - message        
      properties:
        email:
          type: string
        message:
          type: string        
    Nutrient:
      type: object
      required:        
        - foodName
        - foodGroup        
      properties:        
        foodName: 
          type: string
        foodGroup:
          type: string
        Avitamin:
          type: number
        B1vitamin:
          type: number
        B2vitamin:
          type: number
        B3vitamin:
          type: number
        B5vitamin:
          type: number
        B6vitamin:
          type: number
        B12vitamin:
          type: number
        Cvitamin:
          type: number
        Dvitamin:
          type: number
        Evitamin:
          type: number
        Kvitamin:
          type: number
        folat:
          type: number
        kalcium:
          type: number
        rez:
          type: number
        vas:
          type: number
        magnezium:
          type: number
        mangan:
          type: number
        foszfor:
          type: number
        kalium:
          type: number
        szelen:
          type: number
        natrium:
          type: number
        cink:
          type: number
        omegaharom:
          type: number
        omegahat:
          type: number
        telitett:
          type: number
        szenhidrat:
          type: number
        rost:
          type: number
        kemenyito:
          type: number
        feherje:
          type: number
        cisztein:
          type: number
        hisztidin:
          type: number
        izoleucin:
          type: number
        leucin:
          type: number
        lizin:
          type: number
        metionin:
          type: number
        fenilAlanin:
          type: number
        treonin:
          type: number
        triptofan:
          type: number
        tirozin:
          type: number
        valin:
          type: number
        zsir:
          type: number    
    Order:
      type: object
      required:        
        - userId
        - foodId
        - amount
        - status
        - time    
      properties:        
        userId:
          type: number
        foodId:
          type: number
        amount:
          type: number
        status:
          type: string
        time:
          type: Date
    User:
      type: object
      required:        
        - firstName
        - lastName
        - email
        - phone
        - zip
        - city
        - address
          
      properties:        
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        zip:
          type: number
        city:
          type: string
        address:
          type: string
        password:
          type: string
        role:
          type: number
        token:
          type: string    
    Error:
      type: object
      required:
        - message
        - has_error
      properties:
        message:
          type: string
        has_error:
          type: boolean